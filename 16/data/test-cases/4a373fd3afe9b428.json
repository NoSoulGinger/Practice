{"uid":"4a373fd3afe9b428","name":"Disappearing Elements test","fullName":"tests.test_disappearing_elements.TestDisappearingElements#test_disappearing_elements","historyId":"49e77cc63922a42d6dfabb9d2e76999f","time":{"start":1687436561119,"stop":1687436561349,"duration":230},"status":"failed","statusMessage":"AssertionError: assert 4 == 5\n +  where 4 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"b92d95994442c58ab06b602ff0a4c61a\", element=\"DE17A66E4D78CF...lement.WebElement (session=\"b92d95994442c58ab06b602ff0a4c61a\", element=\"DE17A66E4D78CF7B096B62C92741B502_element_12\")>])","statusTrace":"self = <test_disappearing_elements.TestDisappearingElements object at 0x7fe8350beef0>\n\n    @allure.id(\"TC-09\")\n    @allure.title(\"Disappearing Elements test\")\n    def test_disappearing_elements(self):\n        list_of_elements = []\n        wait = WebDriverWait(self.browser, 5)\n        elements = wait.until(EC.presence_of_all_elements_located((By.XPATH, \"//ul/li\")))\n        for element in elements:\n            list_of_elements.append(element.text)\n        print(f\"Before refresh the page has {len(elements)} elements.\\nThe elements are the following: {list_of_elements}\")\n        assert len(elements) == 4\n        list_of_elements.clear()\n        self.browser.refresh()\n        elements = wait.until(EC.presence_of_all_elements_located((By.XPATH, \"//ul/li\")))\n        for element in elements:\n            list_of_elements.append(element.text)\n        print(f\"After refresh the page has {len(elements)} elements.\\nThe elements are the following: {list_of_elements}\")\n>       assert len(elements) == 5\nE       assert 4 == 5\nE        +  where 4 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"b92d95994442c58ab06b602ff0a4c61a\", element=\"DE17A66E4D78CF...lement.WebElement (session=\"b92d95994442c58ab06b602ff0a4c61a\", element=\"DE17A66E4D78CF7B096B62C92741B502_element_12\")>])\n\ntests/test_disappearing_elements.py:40: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestDisappearingElements","time":{"start":1687436559710,"stop":1687436561118,"duration":1408},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 4 == 5\n +  where 4 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"b92d95994442c58ab06b602ff0a4c61a\", element=\"DE17A66E4D78CF...lement.WebElement (session=\"b92d95994442c58ab06b602ff0a4c61a\", element=\"DE17A66E4D78CF7B096B62C92741B502_element_12\")>])","statusTrace":"self = <test_disappearing_elements.TestDisappearingElements object at 0x7fe8350beef0>\n\n    @allure.id(\"TC-09\")\n    @allure.title(\"Disappearing Elements test\")\n    def test_disappearing_elements(self):\n        list_of_elements = []\n        wait = WebDriverWait(self.browser, 5)\n        elements = wait.until(EC.presence_of_all_elements_located((By.XPATH, \"//ul/li\")))\n        for element in elements:\n            list_of_elements.append(element.text)\n        print(f\"Before refresh the page has {len(elements)} elements.\\nThe elements are the following: {list_of_elements}\")\n        assert len(elements) == 4\n        list_of_elements.clear()\n        self.browser.refresh()\n        elements = wait.until(EC.presence_of_all_elements_located((By.XPATH, \"//ul/li\")))\n        for element in elements:\n            list_of_elements.append(element.text)\n        print(f\"After refresh the page has {len(elements)} elements.\\nThe elements are the following: {list_of_elements}\")\n>       assert len(elements) == 5\nE       assert 4 == 5\nE        +  where 4 = len([<selenium.webdriver.remote.webelement.WebElement (session=\"b92d95994442c58ab06b602ff0a4c61a\", element=\"DE17A66E4D78CF...lement.WebElement (session=\"b92d95994442c58ab06b602ff0a4c61a\", element=\"DE17A66E4D78CF7B096B62C92741B502_element_12\")>])\n\ntests/test_disappearing_elements.py:40: AssertionError","steps":[],"attachments":[{"uid":"b49ca1314eb59bd2","name":"stdout","source":"b49ca1314eb59bd2.txt","type":"text/plain","size":233}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_method_fixture_TestDisappearingElements::0","time":{"start":1687436561386,"stop":1687436561443,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"as_id","value":"TC-09"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_disappearing_elements"},{"name":"subSuite","value":"TestDisappearingElements"},{"name":"host","value":"fv-az577-654"},{"name":"thread","value":"2279-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_disappearing_elements"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"4a373fd3afe9b428.json","parameterValues":[]}